import {
  DarkTheme as NavigationDarkTheme,
  DefaultTheme as NavigationDefaultTheme,
} from '@react-navigation/native';
import {
  adaptNavigationTheme,
  MD3DarkTheme,
  MD3LightTheme,
} from 'react-native-paper';

const { LightTheme, DarkTheme } = adaptNavigationTheme({
  reactNavigationLight: NavigationDefaultTheme,
  reactNavigationDark: NavigationDarkTheme,
});

const CombinedDefaultTheme = {
  ...MD3LightTheme,
  ...LightTheme,
  colors: {
    primary: '#163033',
    onPrimary: 'rgb(255, 255, 255)',
    primaryContainer: 'rgb(136, 243, 255)',
    onPrimaryContainer: 'rgb(0, 31, 35)',
    secondary: 'rgb(74, 99, 102)',
    onSecondary: 'rgb(255, 255, 255)',
    secondaryContainer: 'rgb(205, 231, 235)',
    onSecondaryContainer: 'rgb(5, 31, 34)',
    tertiary: 'rgb(80, 94, 125)',
    onTertiary: 'rgb(255, 255, 255)',
    tertiaryContainer: 'rgb(216, 226, 255)',
    onTertiaryContainer: 'rgb(12, 27, 54)',
    error: 'rgb(186, 26, 26)',
    onError: 'rgb(255, 255, 255)',
    errorContainer: 'rgb(255, 218, 214)',
    onErrorContainer: 'rgb(65, 0, 2)',
    background: 'rgb(250, 253, 253)',
    onBackground: 'rgb(25, 28, 29)',
    surface: 'rgb(250, 253, 253)',
    onSurface: 'rgb(25, 28, 29)',
    surfaceVariant: 'rgb(218, 228, 229)',
    onSurfaceVariant: 'rgb(63, 72, 74)',
    outline: 'rgb(111, 121, 122)',
    outlineVariant: 'rgb(190, 200, 201)',
    shadow: 'rgb(0, 0, 0)',
    scrim: 'rgb(0, 0, 0)',
    inverseSurface: 'rgb(45, 49, 49)',
    inverseOnSurface: 'rgb(239, 241, 241)',
    inversePrimary: 'rgb(77, 216, 231)',
    elevation: {
      level0: 'transparent',
      level1: 'rgb(238, 246, 246)',
      level2: 'rgb(230, 241, 242)',
      level3: 'rgb(223, 237, 238)',
      level4: 'rgb(220, 235, 236)',
      level5: 'rgb(215, 232, 233)',
    },
    surfaceDisabled: 'rgba(25, 28, 29, 0.12)',
    onSurfaceDisabled: 'rgba(25, 28, 29, 0.38)',
    backdrop: 'rgba(41, 50, 51, 0.4)',
  },
  fonts: {
    ...MD3LightTheme.fonts,
  },
};
const CombinedDarkTheme = {
  ...MD3DarkTheme,
  ...DarkTheme,
  colors: {
    primary: '#f57c00',
    onPrimary: 'rgb(0, 54, 59)',
    primaryContainer: 'rgb(0, 79, 86)',
    onPrimaryContainer: 'rgb(136, 243, 255)',
    secondary: 'rgb(177, 203, 207)',
    onSecondary: 'rgb(28, 52, 55)',
    secondaryContainer: 'rgb(50, 75, 78)',
    onSecondaryContainer: 'rgb(205, 231, 235)',
    tertiary: 'rgb(255, 185, 87)',
    onTertiary: 'rgb(70, 43, 0)',
    tertiaryContainer: 'rgb(100, 63, 0)',
    onTertiaryContainer: 'rgb(255, 221, 181)',
    error: 'rgb(255, 180, 171)',
    onError: 'rgb(105, 0, 5)',
    errorContainer: 'rgb(147, 0, 10)',
    onErrorContainer: 'rgb(255, 180, 171)',
    background: 'rgb(25, 28, 29)',
    onBackground: 'rgb(224, 227, 227)',
    surface: 'rgb(25, 28, 29)',
    onSurface: 'rgb(224, 227, 227)',
    surfaceVariant: 'rgb(63, 72, 74)',
    onSurfaceVariant: 'rgb(190, 200, 201)',
    outline: 'rgb(137, 146, 148)',
    outlineVariant: 'rgb(63, 72, 74)',
    shadow: 'rgb(0, 0, 0)',
    scrim: 'rgb(0, 0, 0)',
    inverseSurface: 'rgb(224, 227, 227)',
    inverseOnSurface: 'rgb(45, 49, 49)',
    inversePrimary: 'rgb(0, 105, 113)',
    elevation: {
      level0: 'transparent',
      level1: 'rgb(28, 37, 39)',
      level2: 'rgb(29, 43, 45)',
      level3: 'rgb(31, 49, 51)',
      level4: 'rgb(31, 51, 53)',
      level5: 'rgb(32, 54, 57)',
    },
    surfaceDisabled: 'rgba(224, 227, 227, 0.12)',
    onSurfaceDisabled: 'rgba(224, 227, 227, 0.38)',
    backdrop: 'rgba(41, 50, 51, 0.4)',
  },
  fonts: {
    ...MD3DarkTheme.fonts,
  },
};

export { CombinedDarkTheme, CombinedDefaultTheme };
