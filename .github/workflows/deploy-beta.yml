name: Build & Deploy on Beta

on:
  release:
    types: [prereleased]

concurrency: build-and-deploy-beta

env:
  SENTRY_URL: https://sentry.io/
  SENTRY_PROJECT: le-qg
  SENTRY_ORG: le-qg
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  android:
    name: Android App
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
            **/node_modules
          key: ${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Create env file
        run: |
          cat << EOF > .env
          GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}
          MAPBOX_API_KEY=${{ secrets.MAPBOX_API_KEY }}
          EOF

      - name: Linter
        run: yarn lint

      - name: Unit tests
        run: yarn test

      - name: Grant rights
        working-directory: android
        run: chmod +x build.gradle

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Get release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v*}" >> $GITHUB_ENV

      - name: Bump version
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: android/app/build.gradle
          versionName: ${{ env.RELEASE_VERSION }}

      - name: Build Release AAB
        working-directory: android
        run: ./gradlew bundleRelease --no-daemon

      - name: Sign AAB
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}

      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.leqg
          releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
          track: beta
          status: completed

  ios:
    name: iOS App
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Cache Node.js dependencies
        id: cache-nodejs-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
            **/node_modules
          key: ${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-nodejs-dependencies.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Linter
        run: yarn lint

      - name: Unit tests
        run: yarn test

      - name: Create netrc file
        uses: extractions/netrc@v1
        with:
          machine: api.mapbox.com
          username: mapbox
          password: ${{ secrets.MAPBOX_SECRET_KEY }}

      - name: Create env file
        run: |
          cat << EOF > .env
          GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}
          MAPBOX_API_KEY=${{ secrets.MAPBOX_API_KEY }}
          EOF

      - name: Create Google Services file
        run: |
          cat << EOF > android/app/google-services.json
          ${{ secrets.GOOGLE_SERVICES_JSON }}
          EOF

      - name: Cache iOS dependencies
        id: cache-ios-dependencies
        uses: actions/cache@v2
        with:
          path: ios/Pods
          key: ${{ hashFiles('**/Podfile.lock') }}
      - name: Install iOS dependencies
        if: steps.cache-ios-dependencies.outputs.cache-hit != 'true'
        run: pod install
        working-directory: ios

      - name: Get release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v*}" | awk -F"-" '{print $1}' >> $GITHUB_ENV

      - name: Get release note from release description
        run: echo "${{ github.event.release.body }}" > ./fastlane/metadata/fr-FR/release_notes.txt

      - run: fastlane beta
        env:
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APPSTORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APPSTORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APPSTORE_CONNECT_API_KEY }}
          MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_REPO_TOKEN_64 }}
          BUILD_NUMBER: ${{ github.run_id }}
          VERSION_NUMBER: ${{ env.RELEASE_VERSION }}
